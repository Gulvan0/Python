# coding: utf-8
import requests
from time import sleep

url = "https://api.telegram.org/bot619417032:AAE9GD3pce7QdmSlsFx0qljckQ1sV9umWIo/"
opids = [389663571]
counter = 0
answerTo = dict.fromkeys(opids)

sequence = {}

def get_updates_json(request):  
    params = {'timeout': 100, 'offset': None}
    response = requests.get(request + 'getUpdates', data=params)
    return response.json()

def last_update(data):  
    results = data['result']
    total_updates = len(results) - 1
    return results[total_updates]
    
def get_chat_id(update):  
    chat_id = update['message']['chat']['id']
    return chat_id
    
def get_text(update):  
    t = update['message']['text']
    return t

def send_mess(chat, text):  
    params = {'chat_id': chat, 'text': text}
    response = requests.post(url + 'sendMessage', data=params)
    return response
    
def get_operator_id():
    global counter
    op = opids[counter]
    counter+=1
    if counter == len(opids):
        counter = 0
    return op
    
def one_of(obj, ar):
    for a in ar:
        if a == obj:
            return True
    return False

def get_answer(seq):
    a = ""
    if seq[0] == "2":
        if seq == "211": a = "Чтобы стать участником Профессионального потока, Вам необходимо заполнить заявку на участие на официальном сайте Форума: https://reg.culturalforum.ru/register"
        elif seq == "212": a = "Чтобы стать участником Общественного потока, Вам необходимо на официальном сайте форума http://culturalforum.ru/ru в разделе «Заявка на участие» выбрать «Общественный поток» и заполнить все обязательные поля анкеты"
        elif seq == "221": a = "С 20 апреля по 20 октября 2018 года"
        elif seq == "222": a = "До 10 ноября 2018 года"
        elif seq == "231": a = "В Личном кабинете Вы можете проверить свои личные данные, сформировать индивидуальную программу, зарегистрироваться на мероприятия, а также получить информацию о специальных предложениях для участников Форума от партнеров – отелей и ресторанов."
        elif seq == "232": a = """Личный кабинет – это персональный раздел на официальном сайте Форума, где зарегистрированный участник Общественного потока может:
- Распечатать электронный билет на открытые мероприятия;
- Получить билеты на мероприятия Общественного потока с ограниченным доступом;
- Сформировать и распечатать свою программу мероприятий"""
        elif seq == "24": a = "Напишите на адрес participants@culturalforum.ru"
        elif seq == "25": a = "При регистрации возможно сохранить только один электронный адрес"
        elif seq == "26": a = "Напишите на адрес participants@culturalforum.ru"
        elif seq == "27": a = "Да, заполните регистрационную анкету на сайте Форума в разделе «Регистрация» - > «Аккредитация СМИ»"
        elif seq == "28": a = "Да, напишите, пожалуйста, на адрес participants@culturalforum.ru"
        elif seq == "29": a = "Подтвержденные участники профессионального потока могут отказаться от участия в Форуме, написав письмо на адрес эл. почты: participants@culturalforum.ru"
    if seq[0] == "3":
        if seq == "31": a = "Бейдж - это запрограммированная карта, который привязан к записи об участнике в базе данных Форума. Бейдж содержит следующую информацию об участнике на английском языке: id (идентификационный номер), фамилия и имя, категория, уровень доступа по зоне, фотография, логотип VII Санкт-Петербургского международного культурного форума"
        elif seq == "32": a = "Бейджи участников Форума будут выдаваться в Главном пункте аккредитации по адресу: город Санкт-Петербург, набережная реки Мойки, 23. Дополнительный пункт аккредитации находится по адресу Тверская ул., д. 23 – Государственный музей истории России"
        elif seq == "33": a = "График работы Главного пункта аккредитации будет размещен на сайте, а также в Личном кабинете участника"
        elif seq == "34": a = """Перед получением бейджа проверьте в Личном кабинете, что бейдж готов к печати.
Для получения бейджа участника Профессионального потока необходимо предъявить паспорт. 
Передача бейджа третьим лицам запрещена.
Вместе с бейджем также будет выдан пакет участника (брендированная сумка) с программой Форума и информационными материалами (а также приглашение на специальные мероприятия некоторым категориям участникам).

Участникам Общественного потока бейдж получать не надо"""
        elif seq == "35": a = "Получение бейджа доверенным лицом возможно только при наличии паспорта и доверенности на получение бейджа. Доверенность на получение бейджей можно скачать в Личном кабинете"
        elif seq == "36": a = "Информация временно отсутствует"
        elif seq == "37": a = "Получение по заграничному паспорту возможно в том случае, если при регистрации были указаны данные загранпаспорта. Если нет, то необходимо написать на адрес participants@culturalforum.ru для внесения корректировок"
        elif seq == "38": a = """Требования к фотографии: 
- Размер фотографии 480x640 pixels;
- Фотография должна быть цветная на белом фоне, тип «для документов»;
- Разрешение 300 dpi (качество фотографии); 
- Изображение должно быть анфас, без головного убора;
- Изображение лица должно занимать не менее 70% фотографии"""
        elif seq == "39": a = "Обратитесь в Главный пункт аккредитации"
    return a

def get_mess(seq):
    mes = ""
    add = ""
    fin = ""
    if len(seq) == 1:
        mes = "Выберите интересующий вас вопрос, отправив его номер:\n\n"
        if seq[0] == "2":
            add = """1 - Где возможно зарегистрироваться?
2 - До какого числа возможно зарегистрироваться?
3 - Что такое личный кабинет?
4 - Что делать, если я не могу зарегистрироваться на сайте/попасть в Личный кабинет?
5 - Можно ли сохранить 2 адреса электронной почты при регистраии (например, рабочий и личный)?
6 - Как изменить данные в анкете?
7 - Могу ли я зарегистрироваться на участие в Форуме в качестве СМИ?
8 - Если мне отказали в участии в секции, могу ли я подать заявку на другую секцию?
9 - Есть ли возможность отказаться от участия после подачи заявки на участие в Форуме?"""
        elif seq[0] == "3":
            add = """1 - Что такое бейдж?
2 - Где получить бейдж?
3 - Когда можно получить бейдж?
4 - Что нужно для получения бейджа?
5 - Получение бейджа третьими лицами
6 - Групповой личный кабинет
7 - Получение по заграничному паспорту
8 - Фото
9 - Что делать, если я потерял бейдж?"""
        fin = "\n\nНе нашли своего вопроса? Отправьте 0, чтобы связаться со службой поддержки"
    elif len(seq) >= 1:
        if one_of(seq, ["22", "23"]):
            mes = """Выберите свой поток:
1 - Профессиональный поток
2 - Общественный поток"""
        elif seq == "21":
            mes = """На что вы хотите зарегистрироваться?
1 - Профессиональный поток
2 - Общественный поток
3 - Премия Луначарского"""
        else:
            mes = ""
    return mes + add + fin

def main():
    update_id = last_update(get_updates_json(url))['update_id']
    while True:
        if update_id == last_update(get_updates_json(url))['update_id']:
        	update_id += 1
        	update = last_update(get_updates_json(url))
        	id = get_chat_id(update)
        	text = get_text(update)
        	
        	if one_of(id, opids):
        	    if answerTo[id] == None:
        	        answerTo[id] = int(text)
        	        send_mess(id, "ID привязан, введите ответ на вопрос")
        	    else:
        	        send_mess(answerTo[id], text)
        	        answerTo[id] = None
        	        send_mess(id, "Ответ отправлен")
        	    continue
        	
        	try:
        	    a = sequence[id]
        	except KeyError:
        	    sequence[id] = "n"
        	    
        	if sequence[id] == "q":
        	    sequence[id] = "n"
        	    mess = "Благодарим вас за обращение! Когда оператор ответит на ваш вопрос, мы направим его ответ вам"
        	    opid = get_operator_id()
        	    send_mess(opid, "Клиент: " + str(id))
        	    send_mess(opid, text)
        	elif sequence[id] != "n":
        	    if len(text) == 1:
        	        if text == "0":
        	            mess = "Введите ваш вопрос"
        	            sequence[id] = "q"
        	        elif ord(text) >= ord("1") and ord(text) <= ord("9"):
        	            sequence[id] += text
        	            mess = get_mess(sequence[id])
        	            if mess == "":
        	                send_mess(id, get_answer(sequence[id]))
        	                mess = "Благодарим вас за обращение! Чтобы задать еще один вопрос, введите /begin"
        	                sequence[id] = "n"
        	    else:
        	        mess = "Цифра не распознана, попробуйте снова"        
        	elif text == "/begin":
        	    sequence[id] = ""
        	    mess = """Здравствуйте! Отправьте, пожалуйста, номер, относящийся к теме вашего вопроса:
        		
        		2 - Регистрация
        		3 - Бейдж и его получение
        		
Не нашли подходящей темы? Отправьте 0, чтобы связаться со службой поддержки"""
        	else:
        		mess = "Введите /begin, чтобы начать"
        	send_mess(id, mess)
        sleep(1)       

if __name__ == '__main__':  
    main()

